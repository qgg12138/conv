{"env_info": "sys.platform: linux\nPython: 3.7.3 (default, Mar  9 2022, 03:38:16) [GCC 8.3.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce GTX 1050\nCUDA_HOME: None\nGCC: gcc (Uos 8.3.0.3-3+rebuild) 8.3.0\nPyTorch: 1.8.2+cu102\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.2+cu102\nOpenCV: 4.5.5\nMMCV: 1.3.17\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+b8c2d6a", "config": "dataset_type = 'CocoDataset'\ndata_root = '/home/kuzuki/Downloads/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='RandomShift', shift_ratio=0.5, max_shift_px=32),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=1,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '/home/kuzuki/Downloads/coco/annotations/instances_train2017.json',\n        img_prefix='/home/kuzuki/Downloads/coco/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='RandomShift', shift_ratio=0.5, max_shift_px=32),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/home/kuzuki/Downloads/coco/annotations/instances_val2017.json',\n        img_prefix='/home/kuzuki/Downloads/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '/home/kuzuki/Downloads/coco/annotations/instances_val2017.json',\n        img_prefix='/home/kuzuki/Downloads/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(\n    type='SGD',\n    lr=0.12,\n    momentum=0.9,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(\n        norm_decay_mult=0.0, custom_keys=dict(backbone=dict(lr_mult=0.1))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=0.00066667,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'yolof.pth'\nresume_from = None\nworkflow = [('train', 1)]\nmodel = dict(\n    type='YOLOF',\n    pretrained='convnext_tiny_1k_224_ema.pth',\n    backbone=dict(\n        init_cfg=dict(type='Pretrained', checkpoint='new.pth'),\n        type='ConvNeXt',\n        depths=[3, 3, 9, 3],\n        dims=[96, 192, 384, 768]),\n    neck=dict(\n        type='DilatedEncoder',\n        in_channels=768,\n        out_channels=512,\n        block_mid_channels=128,\n        num_residual_blocks=4),\n    bbox_head=dict(\n        type='YOLOFHead',\n        num_classes=80,\n        in_channels=512,\n        reg_decoded_bbox=True,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            scales=[1, 2, 4, 8, 16],\n            strides=[32]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0],\n            add_ctr_clamp=True,\n            ctr_clamp=32),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='GIoULoss', loss_weight=1.0)),\n    train_cfg=dict(\n        assigner=dict(\n            type='UniformAssigner', pos_ignore_thr=0.15, neg_ignore_thr=0.7),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.6),\n        max_per_img=100))\ncustom_imports = dict(\n    imports=['mmdet.models.backbones.convnext'], allow_failed_imports=False)\nfp16 = dict(loss_scale='dynamic')\nwork_dir = './work_dirs/convbackboom'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "convbackboom.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0004, "memory": 2469, "data_time": 0.04822, "loss_cls": 1.23312, "loss_bbox": 0.65253, "loss": 1.88565, "time": 2.29493}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0008, "memory": 2469, "data_time": 0.00371, "loss_cls": 1.06045, "loss_bbox": 0.64346, "loss": 1.70391, "time": 2.3302}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0012, "memory": 2469, "data_time": 0.00367, "loss_cls": 1.26134, "loss_bbox": 0.65773, "loss": 1.91907, "time": 2.27711}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0016, "memory": 2546, "data_time": 0.00367, "loss_cls": 2.1463, "loss_bbox": 0.75014, "loss": 2.89644, "time": 2.27435}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.002, "memory": 2546, "data_time": 0.00332, "loss_cls": 1.91504, "loss_bbox": 0.81418, "loss": 2.72923, "time": 2.3087}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0024, "memory": 2546, "data_time": 0.00336, "loss_cls": 1.50361, "loss_bbox": 0.71192, "loss": 2.21553, "time": 2.33327}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0028, "memory": 2546, "data_time": 0.00333, "loss_cls": 1.56481, "loss_bbox": 0.77456, "loss": 2.33937, "time": 2.27856}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0032, "memory": 2546, "data_time": 0.00332, "loss_cls": 2.17734, "loss_bbox": 0.88282, "loss": 3.06015, "time": 2.21558}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0036, "memory": 2546, "data_time": 0.00333, "loss_cls": 1.52227, "loss_bbox": 0.79638, "loss": 2.31866, "time": 2.29395}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.004, "memory": 2546, "data_time": 0.00335, "loss_cls": 1.75987, "loss_bbox": 0.82953, "loss": 2.5894, "time": 2.25859}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.0044, "memory": 2546, "data_time": 0.00336, "loss_cls": 1.81801, "loss_bbox": 0.80094, "loss": 2.61895, "time": 2.27734}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0048, "memory": 2546, "data_time": 0.00335, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2868}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.0052, "memory": 2546, "data_time": 0.00363, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29749}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.0056, "memory": 2546, "data_time": 0.00366, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28174}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.006, "memory": 2546, "data_time": 0.00361, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26266}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0064, "memory": 2546, "data_time": 0.00349, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25431}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.0068, "memory": 2546, "data_time": 0.00358, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26917}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.0072, "memory": 2546, "data_time": 0.00344, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.301}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00759, "memory": 2546, "data_time": 0.00341, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29239}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00799, "memory": 2546, "data_time": 0.00352, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.30629}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00839, "memory": 2546, "data_time": 0.00404, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25659}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00879, "memory": 2546, "data_time": 0.00365, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26609}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00919, "memory": 2546, "data_time": 0.0035, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.32723}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00959, "memory": 2546, "data_time": 0.00342, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28441}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00999, "memory": 2546, "data_time": 0.00344, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29586}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.01039, "memory": 2546, "data_time": 0.00335, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26623}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.01079, "memory": 2546, "data_time": 0.00351, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27903}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.01119, "memory": 2546, "data_time": 0.00336, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27564}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.01159, "memory": 2546, "data_time": 0.0034, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.30502}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.01199, "memory": 2546, "data_time": 0.00344, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.31819}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.012, "memory": 2546, "data_time": 0.00331, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29459}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.012, "memory": 2546, "data_time": 0.00334, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26724}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.012, "memory": 2546, "data_time": 0.00341, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28647}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.012, "memory": 2546, "data_time": 0.00454, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28508}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.012, "memory": 2546, "data_time": 0.00477, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26829}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.012, "memory": 2546, "data_time": 0.0057, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26058}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.012, "memory": 2546, "data_time": 0.0036, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.22201}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.012, "memory": 2546, "data_time": 0.00376, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27124}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.012, "memory": 2546, "data_time": 0.00343, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2765}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.012, "memory": 2546, "data_time": 0.00331, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28786}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.012, "memory": 2546, "data_time": 0.00381, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.31185}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.012, "memory": 2546, "data_time": 0.00352, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28171}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.012, "memory": 2546, "data_time": 0.00377, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28188}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.012, "memory": 2546, "data_time": 0.00356, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27507}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.012, "memory": 2546, "data_time": 0.00361, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28044}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.012, "memory": 2546, "data_time": 0.00422, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28065}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.012, "memory": 2546, "data_time": 0.00389, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.24661}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.012, "memory": 2546, "data_time": 0.00375, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27227}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.012, "memory": 2546, "data_time": 0.00348, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29717}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.012, "memory": 2546, "data_time": 0.00377, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26605}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.012, "memory": 2546, "data_time": 0.00398, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.24027}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.012, "memory": 2546, "data_time": 0.00391, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.22174}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.012, "memory": 2546, "data_time": 0.00345, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25291}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.012, "memory": 2546, "data_time": 0.00434, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25902}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.012, "memory": 2546, "data_time": 0.00394, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29838}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.012, "memory": 2546, "data_time": 0.00382, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26461}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.012, "memory": 2546, "data_time": 0.00411, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.3032}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.012, "memory": 2546, "data_time": 0.00369, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.32935}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.012, "memory": 2546, "data_time": 0.00405, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25376}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.012, "memory": 2546, "data_time": 0.00351, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.32783}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.012, "memory": 2546, "data_time": 0.00391, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26577}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.012, "memory": 2546, "data_time": 0.00474, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29517}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.012, "memory": 2546, "data_time": 0.00366, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26344}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.012, "memory": 2546, "data_time": 0.00405, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.25153}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.012, "memory": 2546, "data_time": 0.00396, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27883}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.012, "memory": 2546, "data_time": 0.00386, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2769}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.012, "memory": 2546, "data_time": 0.00398, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29369}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.012, "memory": 2546, "data_time": 0.00358, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.32568}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.012, "memory": 2546, "data_time": 0.00362, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.24325}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.012, "memory": 2546, "data_time": 0.00353, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26894}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.012, "memory": 2546, "data_time": 0.00352, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.31629}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.012, "memory": 2546, "data_time": 0.00352, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28862}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.012, "memory": 2546, "data_time": 0.00337, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.20167}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.012, "memory": 2546, "data_time": 0.00474, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29833}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.012, "memory": 2546, "data_time": 0.00755, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.36568}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.012, "memory": 2546, "data_time": 0.00808, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.39835}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.012, "memory": 2546, "data_time": 0.00815, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.35404}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.012, "memory": 2546, "data_time": 0.00418, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.31952}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.012, "memory": 2546, "data_time": 0.00333, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26242}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.012, "memory": 2546, "data_time": 0.00332, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.31868}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.012, "memory": 2546, "data_time": 0.00327, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.29037}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.012, "memory": 2546, "data_time": 0.00328, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27243}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.012, "memory": 2546, "data_time": 0.00329, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.30753}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.012, "memory": 2546, "data_time": 0.00328, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26861}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.012, "memory": 2546, "data_time": 0.00326, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.26539}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.012, "memory": 2546, "data_time": 0.00321, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.22802}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.012, "memory": 2546, "data_time": 0.00324, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2597}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.012, "memory": 2546, "data_time": 0.00328, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.32281}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.012, "memory": 2546, "data_time": 0.00319, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.24764}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.012, "memory": 2546, "data_time": 0.00329, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.27826}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.012, "memory": 2546, "data_time": 0.00333, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2759}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.012, "memory": 2546, "data_time": 0.00329, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.2257}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.012, "memory": 2546, "data_time": 0.00327, "loss_cls": NaN, "loss_bbox": NaN, "loss": NaN, "time": 2.28104}
